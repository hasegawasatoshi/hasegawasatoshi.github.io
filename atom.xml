<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Satoshi's Blog]]></title>
  <link href="http://hasegawasatoshi.github.io/atom.xml" rel="self"/>
  <link href="http://hasegawasatoshi.github.io/"/>
  <updated>2015-02-08T03:04:14+09:00</updated>
  <id>http://hasegawasatoshi.github.io/</id>
  <author>
    <name><![CDATA[hasegawasatoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup cross compile for Raspberry Pi]]></title>
    <link href="http://hasegawasatoshi.github.io/blog/2015/02/08/setup-cross-compile-for-raspberry-pi/"/>
    <updated>2015-02-08T01:13:43+09:00</updated>
    <id>http://hasegawasatoshi.github.io/blog/2015/02/08/setup-cross-compile-for-raspberry-pi</id>
    <content type="html"><![CDATA[<p>C/C++のプログラムをRaspberry Pi上でコンパイルするのはさすがに時間がかかるので、PC上でクロスコンパイルできる環境を作りたいと思います。</p>

<!-- more -->


<p>まず、クロスコンパイル用の環境としてLinux環境を用意します。今回は仮想環境(Virtualbox)上で動くUbuntu 14.04を使いました。</p>

<p>Raspberry Pi用のコンパイラは以下のGithubで公開されています。</p>

<ul>
<li><a href="https://github.com/raspberrypi/tools">https://github.com/raspberrypi/tools</a></li>
</ul>


<p>ツールを適当なディレクトリにクローンします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo mkdir /opt/raspberrypi
</span><span class='line'>$ cd /opt/raspberrypi/
</span><span class='line'>$ sudo git clone git://github.com/raspberrypi/tools.git</span></code></pre></td></tr></table></div></figure>


<p>コンパイラが３種類入ってますが、<code>gcc-linaro-arm-linux-gnueabihf-</code>がRaspberry Piに最適化されたコンパイラです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tools/
</span><span class='line'>├── arm-bcm2708
</span><span class='line'>│   ├── arm-bcm2708hardfp-linux-gnueabi
</span><span class='line'>│   ├── arm-bcm2708-linux-gnueabi
</span><span class='line'>│   ├── gcc-linaro-arm-linux-gnueabihf-raspbian
</span><span class='line'>│   └── gcc-linaro-arm-linux-gnueabihf-raspbian-x64</span></code></pre></td></tr></table></div></figure>


<p><code>gcc</code>の動作確認をしてみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /opt/raspberrypi/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin
</span><span class='line'>$ ./arm-linux-gnueabihf-gcc -v
</span><span class='line'>Using built-in specs.
</span><span class='line'>COLLECT_GCC=./arm-linux-gnueabihf-gcc
</span><span class='line'>COLLECT_LTO_WRAPPER=/opt/raspberrypi/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/../libexec/gcc/arm-linux-gnueabihf/4.8.3/lto-wrapper
</span><span class='line'>Target: arm-linux-gnueabihf
</span><span class='line'>Configured with: /home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/src/gcc-linaro-4.8-2014.03/configure --build=x86_64-build_unknown-linux-gnu --host=x86_64-build_unknown-linux-gnu --target=arm-linux-gnueabihf --prefix=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/install --with-sysroot=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/install/arm-linux-gnueabihf/libc --enable-languages=c,c++,fortran --disable-multilib --enable-multiarch --with-arch=armv6 --with-tune=arm1176jz-s --with-fpu=vfp --with-float=hard --with-pkgversion='crosstool-NG linaro-1.13.1+bzr2650 - Linaro GCC 2014.03' --with-bugurl=https://bugs.launchpad.net/gcc-linaro --enable-__cxa_atexit --enable-libmudflap --enable-libgomp --enable-libssp --with-gmp=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/arm-linux-gnueabihf/build/static --with-mpfr=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/arm-linux-gnueabihf/build/static --with-mpc=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/arm-linux-gnueabihf/build/static --with-isl=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/arm-linux-gnueabihf/build/static --with-cloog=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/arm-linux-gnueabihf/build/static --with-libelf=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/.build/arm-linux-gnueabihf/build/static --enable-threads=posix --disable-libstdcxx-pch --enable-linker-build-id --enable-plugin --enable-gold --with-local-prefix=/home/zhehe01/work/bzr/pi-build/builds/arm-linux-gnueabihf-raspbian-linux/install/arm-linux-gnueabihf/libc --enable-c99 --enable-long-long --with-float=hard
</span><span class='line'>Thread model: posix
</span><span class='line'>gcc version 4.8.3 20140303 (prerelease) (crosstool-NG linaro-1.13.1+bzr2650 - Linaro GCC 2014.03)</span></code></pre></td></tr></table></div></figure>


<p>次にRaspberry Piのユーザランドを用意します。<code>rsync</code>でRaspberry Piから取得します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync -rlv --delete-after --safe-links \
</span><span class='line'>     pi@$"Raspberry Pi's IP address":/{lib,usr} \
</span><span class='line'>     /opt/raspberrypi/rootfs</span></code></pre></td></tr></table></div></figure>


<p>Raspberry Pi側で<code>apt-get update</code>や新しくパッケージをインストールする度に再取得する必要があるので、スクリプトにしておくよよいでしょう。</p>

<p>コンパイラにパスを通して簡単なプログラムをコンパイルしてみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>
</span><span class='line'>int main(int argc, char* argv[])
</span><span class='line'>{
</span><span class='line'>     printf("Hello!\n");
</span><span class='line'>
</span><span class='line'>     return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$export RASPI_HOME="/opt/raspberrypi"
</span><span class='line'>$export PATH=${RASPI_HOME}/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin:$PATH
</span><span class='line'>$ arm-linux-gnueabihf-gcc -Wall hello.c -o hello</span></code></pre></td></tr></table></div></figure>


<p><code>file</code>コマンドでARMようの実行ファイルが生成されたことがわかります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ file hello
</span><span class='line'>hello: ELF 32-bit LSB  executable, ARM, EABI5 version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.26, BuildID[sha1]=038067c75c7098b2ef9838d9ceb931f3c4d9b97a, not stripped</span></code></pre></td></tr></table></div></figure>


<p>ファイルをRaspberry Piにコピーします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rsync -rlv --safe-links \
</span><span class='line'>     ${HOME}/raspberrypi/ \
</span><span class='line'>     pi@"Raspberry Pi's IP address":~/shared</span></code></pre></td></tr></table></div></figure>


<p>Raspberry Piで動作することが確認できました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~/shared $ ./hello
</span><span class='line'>Hello!</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://airwiki.ws.dei.polimi.it/index.php/Cross-compiling_for_the_RaspberryPi">http://airwiki.ws.dei.polimi.it/index.php/Cross-compiling_for_the_RaspberryPi</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Bluetooth on Raspberry Pi]]></title>
    <link href="http://hasegawasatoshi.github.io/blog/2015/01/25/using-bluethooth-on-raspberry-pi/"/>
    <updated>2015-01-25T15:38:49+09:00</updated>
    <id>http://hasegawasatoshi.github.io/blog/2015/01/25/using-bluethooth-on-raspberry-pi</id>
    <content type="html"><![CDATA[<p>今回はRaspberry PiでBluetoothを使えるようにしたいと思います。</p>

<p>Bluetoothのドングルは<a href="http://www.planex.co.jp/products/bt-micro4/">PLANEX の BT-Micro4</a>を使いました。BLEタグと接続するので、Bluetooth 4.0対応のものが必要です。</p>

<!-- more -->


<p>Bluethoothを扱うためにBluezをインストールします。<a href="http://stackoverflow.com/questions/24853597/ble-gatttool-cannot-connect-even-though-device-is-discoverable-with-hcitool-lesc">こちら</a>によるとBluezはソースから最新版を入れたほうがよさそうです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo apt-get install libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev libreadline-dev
</span><span class='line'>pi@raspberrypi ~ $ sudo wget https://www.kernel.org/pub/linux/bluetooth/bluez-5.27.tar.xz
</span><span class='line'>pi@raspberrypi ~ $ sudo tar xvf bluez-5.27.tar.xz
</span><span class='line'>pi@raspberrypi ~ $ cd bluez-5.27/
</span><span class='line'>pi@raspberrypi ~/bluez-5.27 $ sudo LDFLAGS=-lrt./configure --disable-systemd
</span><span class='line'>pi@raspberrypi ~/bluez-5.27 $ make
</span><span class='line'>pi@raspberrypi ~/bluez-5.27 $ sudo make install</span></code></pre></td></tr></table></div></figure>


<blockquote><p>下記のようなエラーが<code>LDFLAG</code>に<code>-lrt</code>を付けてみてください。</p>

<pre><code>/usr/bin/ld: profiles/health/mcap.o: undefined reference to symbol 'clock_getres@@GLIBC_2.4'
//lib/arm-linux-gnueabihf/librt.so.1: error adding symbols: DSO missing from command line
collect2: ld returned 1 exit status
Makefile:4184: recipe for target 'tools/mcaptest' failed
make[1]: *** [tools/mcaptest] Error 1
Makefile:2648: recipe for target 'all' failed
make: *** [all] Error 2
</code></pre>

<p>参考: <a href="http://www.forum-raspberrypi.de/Thread-raspbian-bluez-5-x-kann-nicht-erstellt-werden">http://www.forum-raspberrypi.de/Thread-raspbian-bluez-5-x-kann-nicht-erstellt-werden</a></p></blockquote>

<p>まず、ドングルがUSB機器として認識しているかを確認します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ lsusb
</span><span class='line'>Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.
</span><span class='line'>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
</span><span class='line'>Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.
</span><span class='line'>Bus 001 Device 006: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)
</span><span class='line'>Bus 001 Device 005: ID 0411:01a2 BUFFALO INC. (formerly MelCo., Inc.) WLI-UC-GNM Wireless LAN Adapter [Ralink RT8070]</span></code></pre></td></tr></table></div></figure>


<p>ちゃんと認識されました。</p>

<p><code>hciconfig</code>を用いて状態を確認します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ hciconfig
</span><span class='line'>hci0:     Type: BR/EDR  Bus: USB
</span><span class='line'>     BD Address: 00:1B:DC:06:0C:04  ACL MTU: 310:10  SCO MTU: 64:8
</span><span class='line'>     DOWN
</span><span class='line'>     RX bytes:547 acl:0 sco:0 events:27 errors:0
</span><span class='line'>     TX bytes:384 acl:0 sco:0 commands:27 errors:0</span></code></pre></td></tr></table></div></figure>


<p>上のように<code>Down</code>状態だったら起動します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo hciconfig hci0 up
</span><span class='line'>pi@raspberrypi ~ $ hciconfig
</span><span class='line'>hci0:     Type: BR/EDR  Bus: USB
</span><span class='line'>     BD Address: 00:1B:DC:06:0C:04  ACL MTU: 310:10  SCO MTU: 64:8
</span><span class='line'>     UP RUNNING
</span><span class='line'>     RX bytes:1094 acl:0 sco:0 events:54 errors:0
</span><span class='line'>     TX bytes:768 acl:0 sco:0 commands:54 errors:0</span></code></pre></td></tr></table></div></figure>


<p>WICED Senseの電源を入れ、スキャンします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo hcitool lescan
</span><span class='line'>LE Scan ...
</span><span class='line'>00:10:18:01:07:F1 WICED Sense Kit
</span><span class='line'>00:10:18:01:07:F1 (unknown)
</span><span class='line'>00:10:18:01:07:F1 WICED Sense Kit
</span><span class='line'>00:10:18:01:07:F1 (unknown)
</span><span class='line'>... (snip) ...</span></code></pre></td></tr></table></div></figure>


<p>WICED Senseのアドレスが<code>00:10:18:01:07:F1</code>であることが分かりました。
ひたすらログが出続けるのでCTRL-Cで止めます。</p>

<p>実際に接続できるか確認してみましょう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo hcitool lecc 00:10:18:01:07:F1
</span><span class='line'>Connection handle 71</span></code></pre></td></tr></table></div></figure>


<p>問題なさそうなので<code>gatttool</code>を使って、インタラクティブモードで接続してみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo gatttool -b 00:10:18:01:07:F1 -I
</span><span class='line'>[00:10:18:01:07:F1][LE]&gt; connect
</span><span class='line'>Attempting to connect to 00:10:18:01:07:F1
</span><span class='line'>Connection successful
</span><span class='line'>[00:10:18:01:07:F1][LE]&gt; primary
</span><span class='line'>Command Failed: Disconnected
</span><span class='line'>[00:10:18:01:07:F1][LE]&gt;</span></code></pre></td></tr></table></div></figure>


<p>最初は接続できるものの、すぐに切断されてしまい、<code>primary</code>コマンドがエラーとなります。</p>

<p>ノンインタラクティブモードなら大丈夫のようです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo gatttool -b 00:10:18:01:07:F1  --primary
</span><span class='line'>attr handle = 0x0001, end grp handle = 0x0001 uuid: 00001801-0000-1000-8000-00805f9b34fb
</span><span class='line'>attr handle = 0x0014, end grp handle = 0x0018 uuid: 00001800-0000-1000-8000-00805f9b34fb
</span><span class='line'>attr handle = 0x0028, end grp handle = 0x002b uuid: 739298b6-87b6-4984-a5dc-bdc18b068985
</span><span class='line'>attr handle = 0x004d, end grp handle = 0x0053 uuid: 0000180a-0000-1000-8000-00805f9b34fb
</span><span class='line'>attr handle = 0x0061, end grp handle = 0x0063 uuid: 0000180f-0000-1000-8000-00805f9b34fb
</span><span class='line'>attr handle = 0xff00, end grp handle = 0xff07 uuid: a86abc2d-d44c-442e-99f7-80059a873e36</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo gatttool -b 00:10:18:01:07:F1  --characteristics
</span><span class='line'>handle = 0x0015, char properties = 0x02, char value handle = 0x0016, uuid = 00002a00-0000-1000-8000-00805f9b34fb
</span><span class='line'>handle = 0x0017, char properties = 0x02, char value handle = 0x0018, uuid = 00002a01-0000-1000-8000-00805f9b34fb
</span><span class='line'>handle = 0x0029, char properties = 0x12, char value handle = 0x002a, uuid = 33ef9113-3b55-413e-b553-fea1eaada459
</span><span class='line'>handle = 0x004e, char properties = 0x02, char value handle = 0x004f, uuid = 00002a29-0000-1000-8000-00805f9b34fb
</span><span class='line'>handle = 0x0050, char properties = 0x02, char value handle = 0x0051, uuid = 00002a24-0000-1000-8000-00805f9b34fb
</span><span class='line'>handle = 0x0052, char properties = 0x02, char value handle = 0x0053, uuid = 00002a23-0000-1000-8000-00805f9b34fb
</span><span class='line'>handle = 0x0062, char properties = 0x02, char value handle = 0x0063, uuid = 00002a19-0000-1000-8000-00805f9b34fb
</span><span class='line'>handle = 0xff01, char properties = 0x18, char value handle = 0xff02, uuid = 1bd19c14-b78a-4e0f-aeb5-8e0352bac382
</span><span class='line'>handle = 0xff04, char properties = 0x08, char value handle = 0xff05, uuid = 279f9dab-79be-4663-af1d-24407347af13
</span><span class='line'>handle = 0xff06, char properties = 0x02, char value handle = 0xff07, uuid = 6aa5711b-0376-44f1-bca1-8647b48bdb55</span></code></pre></td></tr></table></div></figure>


<p>切断されてしまう原因が分からないのですが、ノンインタラクティブモードで進めてみましょう。</p>

<p><code>Manufacturer Name String</code>を取得してみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo gatttool -b 00:10:18:01:07:F1  --char-read --handle=0x004f
</span><span class='line'>Characteristic value/descriptor: 42 72 6f 61 64 63 6f 6d
</span><span class='line'>pi@raspberrypi ~ $ echo "42 72 6f 61 64 63 6f 6d" | tr -d \ | xxd -r -p; echo ""
</span><span class='line'>Broadcom</span></code></pre></td></tr></table></div></figure>


<p>期待通り<code>Broadcom</code>という文字列が取得できました。</p>

<p>では、本来の目的であるセンサー情報を取得してみます。<a href="http://stackoverflow.com/questions/15657007/bluetooth-low-energy-listening-for-notifications-indications-in-linux">ここ</a>を参考に、<code>notification</code>を受け取るために<code>0x0100</code>を書き込みます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gatttool -b 00:10:18:01:07:F1 --char-write-req --handle=0x002b --value=0100 --listen
</span><span class='line'>Characteristic value was written successfully
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 53 00 11 06 3d e9 d5 03 d6 03 a8 ff 56 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 52 00 11 06 3d e9 d5 03 d9 03 9f ff 5b fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 53 00 11 06 3d e9 d5 03 ed 03 a1 ff 61 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 52 00 11 06 3d e9 d5 03 d9 03 a1 ff 5d fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 53 00 11 06 3d e9 d5 03 df 03 a1 ff 59 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 53 00 11 06 3d e9 d5 03 db 03 a0 ff 5d fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 53 00 11 06 3d e9 d5 03 e0 03 9e ff 51 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 53 00 11 06 3d e9 d5 03 d6 03 a3 ff 52 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 01 00 53 00 11 06 3d e9 d5 03 de 03 9a ff 61 fb
</span><span class='line'>Notification handle = 0x002a value: 34 09 02 79 27 a8 00
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 52 00 11 06 3d e9 d5 03 e9 03 93 ff 54 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 52 00 11 06 3d e9 d5 03 e0 03 a7 ff 5d fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 53 00 11 06 3d e9 d5 03 e0 03 9f ff 65 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 53 00 11 06 3d e9 d5 03 e5 03 9a ff 5d fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 52 00 11 06 3d e9 d5 03 d3 03 9c ff 55 fb
</span><span class='line'>Notification handle = 0x002a value: 0b 00 00 02 00 53 00 11 06 3d e9 d5 03 dc 03 9f ff 54 fb
</span><span class='line'>Notification handle = 0x002a value: 0b ff ff 02 00 53 00 11 06 3d e9 d5 03 da 03 93 ff 5f fb</span></code></pre></td></tr></table></div></figure>


<p>無事、センサーデータを取得できたのですが、やはい、１秒くらいで接続が切れてしまいます。</p>

<p><code>hcidump</code>でパケットをキャプチャしてみたところ、WICED Senseから接続を切っているようですが。。。今日のところはここで手詰まりです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; ACL data: handle 71 flags 0x02 dlen 26
</span><span class='line'>    ATT: Handle notify (0x1b)
</span><span class='line'>      handle 0x002a
</span><span class='line'>      value 0x0b 0x00 0x00 0x01 0x00 0x53 0x00 0x11 0x06 0x3d 0xe9 0xd5 0x03 0xff 0x03 0x06 0x00 0x86 0xfb
</span><span class='line'>&gt; ACL data: handle 71 flags 0x02 dlen 26
</span><span class='line'>    ATT: Handle notify (0x1b)
</span><span class='line'>      handle 0x002a
</span><span class='line'>      value 0x0b 0x00 0x00 0x02 0x00 0x52 0x00 0x11 0x06 0x3d 0xe9 0xd5 0x03 0x13 0x04 0x05 0x00 0x95 0xfb
</span><span class='line'>&lt; HCI Command: Disconnect (0x01|0x0006) plen 3
</span><span class='line'>    handle 71 reason 0x13
</span><span class='line'>    Reason: Remote User Terminated Connection
</span><span class='line'>&gt; HCI Event: Command Status (0x0f) plen 4
</span><span class='line'>    Disconnect (0x01|0x0006) status 0x00 ncmd 1
</span><span class='line'>&gt; ACL data: handle 71 flags 0x02 dlen 26
</span><span class='line'>    ATT: Handle notify (0x1b)
</span><span class='line'>      handle 0x002a
</span><span class='line'>      value 0x0b 0x00 0x00 0x02 0x00 0x53 0x00 0x11 0x06 0x3d 0xe9 0xd5 0x03 0x07 0x04 0x02 0x00 0x90 0xfb
</span><span class='line'>&gt; HCI Event: Disconn Complete (0x05) plen 4
</span><span class='line'>    status 0x00 handle 71 reason 0x16
</span><span class='line'>    Reason: Connection Terminated by Local Host</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://nwpct1.hatenablog.com/entry/2013/10/19/190029">http://nwpct1.hatenablog.com/entry/2013/10/19/190029</a></li>
<li><a href="http://developer.mbed.org/users/kazu_zamasu/notebook/BLEforLinux/">http://developer.mbed.org/users/kazu_zamasu/notebook/BLEforLinux/</a></li>
<li><a href="http://www.elinux.org/RPi_Bluetooth_LE">http://www.elinux.org/RPi_Bluetooth_LE</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Raspberry Pi]]></title>
    <link href="http://hasegawasatoshi.github.io/blog/2015/01/17/setting-up-a-raspberry-pi/"/>
    <updated>2015-01-17T23:45:41+09:00</updated>
    <id>http://hasegawasatoshi.github.io/blog/2015/01/17/setting-up-a-raspberry-pi</id>
    <content type="html"><![CDATA[<p>今回はRaspBerry Piののセットアップを行います。使用したのは<a href="http://jp.rs-online.com/web/p/processor-microcontroller-development-kits/8111284/">RrspBerry Pi B+</a>です。</p>

<p>RaspBerry Piのセットアップに関してはいろいろな方が書かれているので今更感もありますが、無線LANのセットアップまで行いたいと思います。</p>

<!-- more -->


<p><a href="http://www.raspberrypi.org/downloads/">ダウンロードサイト</a>からOSイメージをダウンロードします。NOOBSというインストーラーもありますが、今回はOSを直接インストールします。ディストリビューションはDebianベースのRASPBIANを選びました。RPM派の人はFedoraベースのPIDORAでもよいと思います。</p>

<p>OSイメージをダウンロードしてmicroSDに書き込むわけですが、今回はMacを使って書き込みます。</p>

<p>まず、microSDをMacに差してマウントポイントを確認します。下記の例だと <code>/dev/disk5s1</code> が対象となるmicorSDです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ df -h
</span><span class='line'>Filesystem      Size   Used  Avail Capacity  iused   ifree %iused  Mounted on
</span><span class='line'>/dev/disk1     112Gi   99Gi   12Gi    89% 26085623 3237639   89%   /
</span><span class='line'>devfs          194Ki  194Ki    0Bi   100%      670       0  100%   /dev
</span><span class='line'>map -hosts       0Bi    0Bi    0Bi   100%        0       0  100%   /net
</span><span class='line'>map auto_home    0Bi    0Bi    0Bi   100%        0       0  100%   /home
</span><span class='line'>/dev/disk4s1    29Gi  1.4Gi   28Gi     5%   358216 7354538    5%   /Volumes/T
</span><span class='line'>/dev/disk5s1   3.7Gi  803Mi  2.9Gi    22%        0       0  100%   /Volumes/NO NAME</span></code></pre></td></tr></table></div></figure>


<p>ディスクをアンマウントします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo diskutil unmountDisk /dev/disk5
</span><span class='line'>Unmount of all volumes on disk5 was successful</span></code></pre></td></tr></table></div></figure>


<p><code>dd</code> コマンドを使って書き込みます。microSDの書き込み性能にもよると思いますが、かなり時間がかかるので気長に待ちます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dd if=./2014-12-24-wheezy-raspbian.img of=/dev/disk5 bs=1m
</span><span class='line'>3125+0 records in
</span><span class='line'>3125+0 records out
</span><span class='line'>3276800000 bytes transferred in 4491.168493 secs (729610 bytes/sec)</span></code></pre></td></tr></table></div></figure>


<p>Rrapberry PiにmicroSDを差して電源を入れるとOSが起動します。設定メニューが出るので初期設定を行います。目的次第なのですが、以下のように設定しました。</p>

<ul>
<li>[Expand Filesystem] を選択し、SDカードの全領域を使えるように拡張します。</li>
<li>[Internationalisation Option] - [Change Locale] を選択し、ロケールの追加を行います。日本語を使う予定はないのですが、一応、[ja_JP.UTF-8]を追加しておきました。</li>
<li>[Internatinalisation Option] - [Change Timezone] を選択し、タイムゾーンを選択します。[Asia] - [Tokyo] を選択しました。</li>
<li>[Advanced Option] - [Memory Split] を選択し 64 → 16に 変更します。今回はGUIを使わないので、GPUへの割り当てを16MBに減らします。</li>
</ul>


<p>次に無線LANのセットアップを行います。おそらく、大抵の無線LANアダプターが使えると思いますが、BUFFALOの<a href="http://www.amazon.co.jp/gp/product/B003NSAMW2?psc=1&amp;redirect=true&amp;ref_=oh_aui_detailpage_o01_s00">WLI-UC-GNM</a>を使いました。</p>

<p>まず、無線LANアダプターをUSBポートに差して認識していることを確認します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.
</span><span class='line'>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
</span><span class='line'>Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.
</span><span class='line'>Bus 001 Device 005: ID 0411:01a2 BUFFALO INC. (formerly MelCo., Inc.) WLI-UC-GNM Wireless LAN Adapter [Ralink RT8070]</span></code></pre></td></tr></table></div></figure>


<p><code>wpa_passphrase</code> コマンドを用いてパスフェーズの暗号化を行います。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ wpa_passphrase ${SSID} ${PASSPHRASE} 
</span><span class='line'>network={
</span><span class='line'>     ssid="${SSID}"
</span><span class='line'>     #psk="${PASSPHRASE}"
</span><span class='line'>     psk=55125564e034badc3177c3ae7fac2e4cf787a44af3d4b40873b55c42f071a733
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>次に、生成された内容を <code>/etc/wpa_supplicant/wpa_supplicant.conf</code> に追加します。うちのアクセスポイントはWPA/WPA2 AESで接続するので、以下のようになりました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
</span><span class='line'>update_config=1
</span><span class='line'>network={
</span><span class='line'>     ssid="${SSID}"
</span><span class='line'>     proto=RSN
</span><span class='line'>     key_mgmt=WPA-PSK
</span><span class='line'>     pairwise=CCMP
</span><span class='line'>     group=CCMP
</span><span class='line'>     psk=55125564e034badc3177c3ae7fac2e4cf787a44af3d4b40873b55c42f071a733
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>続けて <code>/etc/network/interfaces</code> を変更します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auto lo
</span><span class='line'>
</span><span class='line'>iface lo inet loopback
</span><span class='line'>iface eth0 inet dhcp
</span><span class='line'>
</span><span class='line'>allow-hotplug wlan0
</span><span class='line'>#iface wlan0 inet manual
</span><span class='line'>#wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
</span><span class='line'>iface wlan0 inet dhcp
</span><span class='line'>wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
</span><span class='line'>iface default inet dhcp</span></code></pre></td></tr></table></div></figure>


<p>設定が完了したのでインタフェースを再起動します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo ifup wlan0
</span><span class='line'>Internet Systems Consortium DHCP Client 4.2.2
</span><span class='line'>Copyright 2004-2011 Internet Systems Consortium.
</span><span class='line'>All rights reserved.
</span><span class='line'>For info, please visit https://www.isc.org/software/dhcp/
</span><span class='line'>
</span><span class='line'>Listening on LPF/wlan0/cc:e1:d5:15:84:27
</span><span class='line'>Sending on   LPF/wlan0/cc:e1:d5:15:84:27
</span><span class='line'>Sending on   Socket/fallback
</span><span class='line'>DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 6
</span><span class='line'>DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 15
</span><span class='line'>DHCPREQUEST on wlan0 to 255.255.255.255 port 67
</span><span class='line'>DHCPOFFER from 192.168.3.1
</span><span class='line'>DHCPACK from 192.168.3.1
</span><span class='line'>bound to 192.168.3.18 -- renewal in 41016 seconds.</span></code></pre></td></tr></table></div></figure>


<p>最後にホスト名で <code>ssh</code> 接続できるように <code>avahi-daemon</code> をインストールします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pi@raspberrypi ~ $ sudo apt-get update
</span><span class='line'>pi@raspberrypi ~ $ sudo apt-get install avahi-daemon</span></code></pre></td></tr></table></div></figure>


<p>Macから <code>ping</code> が通ればOKです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ping raspberrypi.local
</span><span class='line'>PING raspberrypi.local (192.168.3.17): 56 data bytes
</span><span class='line'>64 bytes from 192.168.3.17: icmp_seq=0 ttl=64 time=5.404 ms
</span><span class='line'>64 bytes from 192.168.3.17: icmp_seq=1 ttl=64 time=6.617 ms
</span><span class='line'>64 bytes from 192.168.3.17: icmp_seq=2 ttl=64 time=5.839 ms
</span><span class='line'>64 bytes from 192.168.3.17: icmp_seq=3 ttl=64 time=5.881 ms
</span><span class='line'>64 bytes from 192.168.3.17: icmp_seq=4 ttl=64 time=5.708 ms
</span><span class='line'>^C
</span><span class='line'>--- raspberrypi.local ping statistics ---
</span><span class='line'>5 packets transmitted, 5 packets received, 0.0% packet loss
</span><span class='line'>round-trip min/avg/max/stddev = 5.404/5.890/6.617/0.400 ms</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li>超小型PC「Raspberry Pi」で夏休み自由課題: <a href="http://news.mynavi.jp/articles/2014/08/13/raspberry-pi/">http://news.mynavi.jp/articles/2014/08/13/raspberry-pi/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First IoT]]></title>
    <link href="http://hasegawasatoshi.github.io/blog/2015/01/04/my-first-iot/"/>
    <updated>2015-01-04T20:30:51+09:00</updated>
    <id>http://hasegawasatoshi.github.io/blog/2015/01/04/my-first-iot</id>
    <content type="html"><![CDATA[<p>昨年末、IoT関連企業に転職したので、Raspberry PiとBLEタグで遊んでみようと思います。</p>

<p>入手したのはBroadcomの<a href="http://ja.broadcom.com/products/wiced/sense/">WICED Sense</a>。これ一つに温度、湿度、気圧、ジャイロスコープ、加速度センサー、コンパスが内蔵されています。
<img src="http://hasegawasatoshi.github.io/images/2015/01/04/wiced_sense.jpg" title="WICED Sense" alt="WICED Sense"></p>

<!-- more -->


<p>購入は以下からできますが、マクニカの方は、現時点では売り切れのようです。</p>

<ul>
<li><a href="http://www.macnicaonline.com/SHOP/BCM9WICED_SENSE.html">http://www.macnicaonline.com/SHOP/BCM9WICED_SENSE.html</a></li>
<li><a href="http://www.mouser.jp/ProductDetail/Broadcom/BCM9WICED_SENSE/?qs=sGAEpiMZZMvtrnhC60i%252bOrenFUWXz0qHGG1IdBRu48I%3d">http://www.mouser.jp/ProductDetail/Broadcom/BCM9WICED_SENSE/?qs=sGAEpiMZZMvtrnhC60i%252bOrenFUWXz0qHGG1IdBRu48I%3d</a></li>
</ul>


<p>Android/iPhone用のアプリが提供されていて、以下から入手できます。
<img src="http://hasegawasatoshi.github.io/images/2015/01/04/wiced_sense_app.png" title="WICED Sense" alt="WICED Sense"></p>

<ul>
<li><a href="https://play.google.com/store/apps/details?id=com.broadcom.app.wicedsense">Andloid</a></li>
<li><a href="https://itunes.apple.com/jp/app/wiced-sense/id908757577?mt=8">iPhone</a></li>
</ul>


<p>まずは、Macから接続してみましょう。<a href="https://itunes.apple.com/jp/app/lightblue/id639944780?mt=12">LightBlue</a>というアプリケーションを使います。</p>

<p>&ldquo;WICED Sense Kit&#8221;というデバイスが見つかるはずなので、[Service: 180A] - [Characteristic: 2A29] を選択すると、&#8221;Broadcom&#8221;という文字列が見つかるはずです。
<img src="http://hasegawasatoshi.github.io/images/2015/01/04/lightblue1.png" title="Manufacturer Name String" alt="Manufacturer Name String"></p>

<p>これらの&#8221;180A&#8221;や&#8221;2A29&#8221;といった４桁のUUIDはBluetoothの規格として定義されていて、<a href="https://developer.bluetooth.org/gatt/services/Pages/ServicesHome.aspx">Bluetooth Developer site</a>で確認できます。</p>

<p>見たところ、<a href="http://ja.broadcom.com/products/wiced/sense/">WICED Sense</a>が対応しているService/Characteristicは以下のもののようです。</p>

<ul>
<li><a href="https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.device_information.xml">0x180A: Device Information</a>

<ul>
<li><a href="https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.manufacturer_name_string.xml">0x2A29: Manufacturer Name String</a></li>
<li><a href="https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.model_number_string.xml">0x2A24: Model Number String</a></li>
<li><a href="https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.system_id.xml">0x2A23: System ID</a></li>
</ul>
</li>
<li><a href="https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.battery_service.xml">0x180F: Battery Service</a>

<ul>
<li><a href="https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.battery_level.xml">0x2A19: Battery Level</a></li>
</ul>
</li>
</ul>


<p>一方、32桁のUUIDはデバイス開発者が独自に定義したものとなります。どうやら&#8221;33EF9113-3B55-413E-B553-FEA1EAADA459&#8221;がセンサーデータのようです。
<img src="http://hasegawasatoshi.github.io/images/2015/01/04/lightblue2.png" title="Senser Data" alt="Senser Data"></p>

<p>&ldquo;Subscrib&#8221;ボタンを押すと以下のようなデータを取得できます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Subscribed
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200C4B035B2F4DCF703290198FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200BED7CBE94A95F7032F019AFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B0000010052007F6482485AC9F90322019DFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x3468027227BC00
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200CC5F6790AC0CF4032B01A4FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200305DF834E518F9032901ADFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B00000100520071A29FA0AD24EF0320019CFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B0000010052006159577DF430F1031A01A6FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200781006543EE5F7032F01B1FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200C90EC3C2721AF7032301ACFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B00000100520043548F66DE24F403200195FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200770AA60AC130FA0321019CFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200554F7BAF093DF4032B01A4FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x3468027227BC00
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005300644A06F6B154F7031D01B5FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B0000010052004201EA9AAF5E05041F01ACFB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B0000010052000846EC3E2069F0031C01A1FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Notified Value: 0x0B000001005200694342E31EA4F7032D0198FB
</span><span class='line'>- UUID 33EF9113-3B55-413E-B553-FEA1EAADA459 Unsubscribed</span></code></pre></td></tr></table></div></figure>


<p>Sensor Dataのフォーマットはクローズドのようなのでここには書きませんが、以下から入手できます。</p>

<ul>
<li><a href="http://community.broadcom.com/docs/DOC-1775">http://community.broadcom.com/docs/DOC-1775</a></li>
</ul>


<p>アカウント登録が必要ですが、企業や大学のメールアドレスならすぐに承認されます。ただし、gmailなどのフリーなemailアドレスだと拒否されてしまいます。</p>

<p>というわけで、今回は<a href="http://ja.broadcom.com/products/wiced/sense/">WICED Sense</a>がどのようなSensor Dataを送ってくるかがわかりました。次回はRaspberry Piのセットアップを行いたいと思います。</p>
]]></content>
  </entry>
  
</feed>
